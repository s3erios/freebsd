/*	$OpenBSD: if_rtwnreg.h,v 1.3 2015/06/14 08:02:47 stsp Exp $	*/

/*-
 * Copyright (c) 2010 Damien Bergamini <damien.bergamini@free.fr>
 * Copyright (c) 2015 Stefan Sperling <stsp@openbsd.org>
 * Copyright (c) 2016 Andriy Voskoboinyk <avos@FreeBSD.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 * 
 * $FreeBSD$
 */

#ifndef R88EE_PRIV_H
#define R88EE_PRIV_H

#include <dev/rtwn/rtl8188e/r88e_priv.h>

/*
 * RF initialization values.
 */
static const uint8_t rtl8188ee_rf_regs0[] = {
	0x000, 0x008, 0x018, 0x019, 0x01E,
	0x01F, 0x02F, 0x03F, 0x042, 0x057,
	0x058, 0x067, 0x083, 0x0B0, 0x0B1,
	0x0B2, 0x0B4, 0x0B6, 0x0B7, 0x0B8,
	0x0B9, 0x0BA, 0x0BB, 0x0BF, 0x0C2,
	0x0C3, 0x0C4, 0x0C5, 0x0C6, 0x0C7,
	0x0C8, 0x0C9, 0x0CA, 0x0DF, 0x0EF,
	0x051, 0x052, 0x053, 0x056, 0x035,
	0x035, 0x035, 0x036, 0x036, 0x036,
	0x036, 0x0B6, 0x018, 0x05A, 0x019,
	0x034, 0x034, 0x034, 0x034, 0x034,
	0x034, 0x034, 0x034, 0x034, 0x034,
	0x034, 0x000, 0x084, 0x086, 0x087,
	0x08E, 0x08F, 0x0EF, 0x03B, 0x03B,
	0x03B, 0x03B, 0x03B, 0x03B, 0x03B,
	0x03B, 0x03B, 0x03B, 0x03B, 0x03B,
	0x03B, 0x03B, 0x03B, 0x03B, 0x0EF,
	0x000, 0x018, 0x0F9, 0x0F9, 0x01F, // These latter two 0xf8's must be greater than 0xf9
	0x01E, 0x01F, 0x000
};

/*
}, rtl8188ee_rf_regs1[] = { //, 0xFFE, 0xFFE mdelay(50)
	0x01F
},
	rtl8188ee_rf_regs2[] = { //0xFFE, 0xFFE mdelay(50)
	0x01E, 0x01F, 0x000
};
*/

static const uint32_t rtl8e88ee_rf_vals0[] = {
	0x00030000, 0x00084000, 0x00000407, 0x00000012, 0x00080009,
	0x00000880, 0x0001A060, 0x00000000, 0x000060C0, 0x000D0000,
	0x000BE180, 0x00001552, 0x00000000, 0x000FF8FC, 0x00054400,
	0x000CCC19, 0x00043003, 0x0004953E, 0x0001C718, 0x000060FF,
	0x00080001, 0x00040000, 0x00000400, 0x000C0000, 0x00002400,
	0x00000009, 0x00040C91, 0x00099999, 0x000000A3, 0x00088820,
	0x00076C06, 0x00000000, 0x00080000, 0x00000180, 0x000001A0,
	0x0006B27D, 0x0007E49D, 0x00000073, 0x00051FF3, 0x00000086,
	0x00000186, 0x00000286, 0x00001C25, 0x00009C25, 0x00011C25,
	0x00019C25, 0x00048538, 0x00000C07, 0x0004BD00, 0x000739D0,
	0x0000ADF3, 0x00009DF0, 0x00008DED, 0x00007DEA, 0x00006DE7,
	0x000054EE, 0x000044EB, 0x000034E8, 0x0000246B, 0x00001468,
	0x0000006D, 0x00030159, 0x00068200, 0x000000CE, 0x00048A00,
	0x00065540, 0x00088000, 0x000020A0, 0x000F02B0, 0x000EF7B0,
	0x000D4FB0, 0x000CF060, 0x000B0090, 0x000A0080, 0x00090080,
	0x0008F780, 0x000722B0, 0x0006F7B0, 0x00054FB0, 0x0004F060,
	0x00030090, 0x00020080, 0x00010080, 0x0000F780, 0x000000A0,
	0x00010159, 0x0000F407, 0x00000032, 0x00000032, 0x00080003, // The 0x32's here are a reference to mdelay(50)
	0x00000001, 0x00080000, 0x00033E60
};

static const struct rtwn_rf_prog rtl8188ee_rf[] = {
	{
		nitems(rtl8188ee_rf_regs0),
		rtl8188ee_rf_regs0,
		rtl8e88ee_rf_vals0,
		{ 0x0 },
		NULL,
	},
	{ 0, NULL, NULL, { 0 }, NULL } // The end
};

/*
 * MAC initialization values.
 */
static const struct rtwn_mac_prog rtl8188ee_mac[] = {
	{ 0x026, 0x41 }, { 0x027, 0x35 }, { 0x428, 0x0A }, { 0x429, 0x10 },
	{ 0x430, 0x00 }, { 0x431, 0x01 }, { 0x432, 0x02 }, { 0x433, 0x04 },
	{ 0x434, 0x05 }, { 0x435, 0x06 }, { 0x436, 0x07 }, { 0x437, 0x08 },
	{ 0x438, 0x00 }, { 0x439, 0x00 }, { 0x43A, 0x01 }, { 0x43B, 0x02 },
	{ 0x43C, 0x04 }, { 0x43D, 0x05 }, { 0x43E, 0x06 }, { 0x43F, 0x07 },
	{ 0x440, 0x5D }, { 0x441, 0x01 }, { 0x442, 0x00 }, { 0x444, 0x15 },
	{ 0x445, 0xF0 }, { 0x446, 0x0F }, { 0x447, 0x00 }, { 0x458, 0x41 },
	{ 0x459, 0xA8 }, { 0x45A, 0x72 }, { 0x45B, 0xB9 }, { 0x460, 0x66 },
	{ 0x461, 0x66 }, { 0x480, 0x08 }, { 0x4C8, 0xFF }, { 0x4C9, 0x08 },
	{ 0x4CC, 0xFF }, { 0x4CD, 0xFF }, { 0x4CE, 0x01 }, { 0x4D3, 0x01 },
	{ 0x500, 0x26 }, { 0x501, 0xA2 }, { 0x502, 0x2F }, { 0x503, 0x00 },
	{ 0x504, 0x28 }, { 0x505, 0xA3 }, { 0x506, 0x5E }, { 0x507, 0x00 },
	{ 0x508, 0x2B }, { 0x509, 0xA4 }, { 0x50A, 0x5E }, { 0x50B, 0x00 },
	{ 0x50C, 0x4F }, { 0x50D, 0xA4 }, { 0x50E, 0x00 }, { 0x50F, 0x00 },
	{ 0x512, 0x1C }, { 0x514, 0x0A }, { 0x516, 0x0A }, { 0x525, 0x4F },
	{ 0x550, 0x10 }, { 0x551, 0x10 }, { 0x559, 0x02 }, { 0x55D, 0xFF },
	{ 0x605, 0x30 }, { 0x608, 0x0E }, { 0x609, 0x2A }, { 0x620, 0xFF },
	{ 0x621, 0xFF }, { 0x622, 0xFF }, { 0x623, 0xFF }, { 0x624, 0xFF },
	{ 0x625, 0xFF }, { 0x626, 0xFF }, { 0x627, 0xFF }, { 0x652, 0x20 },
	{ 0x63C, 0x0A }, { 0x63D, 0x0A }, { 0x63E, 0x0E }, { 0x63F, 0x0E },
	{ 0x640, 0x40 }, { 0x66E, 0x05 }, { 0x700, 0x21 }, { 0x701, 0x43 },
	{ 0x702, 0x65 }, { 0x703, 0x87 }, { 0x708, 0x21 }, { 0x709, 0x43 },
	{ 0x70A, 0x65 }, { 0x70B, 0x87 }
};

/*
 * Baseband initialization values.
 */
static const uint16_t rtl8188ee_bb_phy_regs0[] = {
	0x800, 0x804, 0x808, 0x80C, 0x810, 0x814, 0x818, 0x81C, 0x820,
	0x824, 0x828, 0x82C, 0x830, 0x834, 0x838, 0x83C, 0x840, 0x844,
	0x848, 0x84C, 0x850, 0x854, 0x858, 0x85C, 0x860, 0x864, 0x868,
	0x86C, 0x870, 0x874, 0x878, 0x87C, 0x880, 0x884, 0x888, 0x88C,
	0x890, 0x894, 0x898, 0x89C, 0x900, 0x904, 0x908, 0x90C, 0x910,
	0x914, 0xA00, 0xA04, 0xA08, 0xA0C, 0xA10, 0xA14, 0xA18, 0xA1C,
	0xA20, 0xA24, 0xA28, 0xA2C, 0xA70, 0xA74, 0xA78, 0xA7C, 0xA80,
	0xB2C, 0xC00, 0xC04, 0xC08, 0xC0C, 0xC10, 0xC14, 0xC18, 0xC1C,
	0xC20, 0xC24, 0xC28, 0xC2C, 0xC30, 0xC34, 0xC38, 0xC3C, 0xC40,
	0xC44, 0xC48, 0xC4C, 0xC50, 0xC54, 0xC58, 0xC5C, 0xC60, 0xC64,
	0xC68, 0xC6C, 0xC70, 0xC74, 0xC78, 0xC7C, 0xC80, 0xC84, 0xC88,
	0xC8C, 0xC90, 0xC94, 0xC98, 0xC9C, 0xCA0, 0xCA4, 0xCA8, 0xCAC,
	0xCB0, 0xCB4, 0xCB8, 0xCBC, 0xCC0, 0xCC4, 0xCC8, 0xCCC, 0xCD0,
	0xCD4, 0xCD8, 0xCDC, 0xCE0, 0xCE4, 0xCE8, 0xCEC, 0xD00, 0xD04,
	0xD08, 0xD0C, 0xD10, 0xD14, 0xD18, 0xD2C, 0xD30, 0xD34, 0xD38,
	0xD3C, 0xD40, 0xD44, 0xD48, 0xD4C, 0xD50, 0xD54, 0xD58, 0xD5C,
	0xD60, 0xD64, 0xD68, 0xD6C, 0xD70, 0xD74, 0xD78, 0xE00, 0xE04,
	0xE08, 0xE10, 0xE14, 0xE18, 0xE1C, 0xE28, 0xE30, 0xE34, 0xE38,
	0xE3C, 0xE40, 0xE44, 0xE48, 0xE4C, 0xE50, 0xE54, 0xE58, 0xE5C,
	0xE60, 0xE68, 0xE6C, 0xE70, 0xE74, 0xE78, 0xE7C, 0xE80, 0xE84,
	0xE88, 0xE8C, 0xED0, 0xED4, 0xED8, 0xEDC, 0xEE0, 0xEEC, 0xF14,
	0xF4C, 0xF00
}, rtl8188ee_bb_agc_regs0[] = {
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78, 0xC78,
	0xC78, 0xC78
};

static const uint32_t rtl8188ee_bb_phy_vals0[] = {
	0x80040000, 0x00000003, 0x0000FC00, 0x0000000A, 0x10001331,
	0x020C3D10, 0x02200385, 0x00000000, 0x01000100, 0x00390204,
	0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00010000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x569A11A9, 0x01000014, 0x66F60110,
	0x061F0649, 0x00000000, 0x27272700, 0x07000760, 0x25004000,
	0x00000808, 0x00000000, 0xB0000C1C, 0x00000001, 0x00000000,
	0xCCC000C0, 0x00000800, 0xFFFFFFFE, 0x40302010, 0x00706050,
	0x00000000, 0x00000023, 0x00000000, 0x81121111, 0x00000002,
	0x00000201, 0x00D047C8, 0x80FF000C, 0x8C838300, 0x2E7F120F,
	0x9500BB78, 0x1114D028, 0x00881117, 0x89140F00, 0x1A1B0000,
	0x090E1317, 0x00000204, 0x00D30000, 0x101FBF00, 0x00000007,
	0x00000900, 0x225B0606, 0x218075B1, 0x80000000, 0x48071D40,
	0x03A05611, 0x000000E4, 0x6C6C6C6C, 0x08800000, 0x40000100,
	0x08800000, 0x40000100, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x69E9AC47, 0x469652AF, 0x49795994, 0x0A97971C,
	0x1F7C403F, 0x000100B7, 0xEC020107, 0x007F037F, 0x69553420,
	0x43BC0094, 0x00013169, 0x00250492, 0x00000000, 0x7112848B,
	0x47C00BFF, 0x00000036, 0x2C7F000D, 0x020610DB, 0x0000001F,
	0x00B91612, 0x390000E4, 0x20F60000, 0x40000100, 0x20200000,
	0x00091521, 0x00000000, 0x00121820, 0x00007F7F, 0x00000000,
	0x000300A0, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x28000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x64B22427, 0x00766932,
	0x00222222, 0x00000000, 0x37644302, 0x2F97D40C, 0x00000740,
	0x00020401, 0x0000907F, 0x20010201, 0xA0633333, 0x3333BC43,
	0x7A8F5B6F, 0xCC979975, 0x00000000, 0x80608000, 0x00000000,
	0x00127353, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x6437140A, 0x00000000, 0x00000282, 0x30032064, 0x4653DE68,
	0x04518A3C, 0x00002101, 0x2A201C16, 0x1812362E, 0x322C2220,
	0x000E3C24, 0x2D2D2D2D, 0x2D2D2D2D, 0x0390272D, 0x2D2D2D2D,
	0x2D2D2D2D, 0x2D2D2D2D, 0x2D2D2D2D, 0x00000000, 0x1000DC1F,
	0x10008C1F, 0x02140102, 0x681604C2, 0x01007C00, 0x01004800,
	0xFB000000, 0x000028D1, 0x1000DC1F, 0x10008C1F, 0x02140102,
	0x28160D05, 0x00000008, 0x001B25A4, 0x00C00014, 0x00C00014,
	0x01000014, 0x01000014, 0x01000014, 0x01000014, 0x00C00014,
	0x01000014, 0x00C00014, 0x00C00014, 0x00C00014, 0x00C00014,
	0x00000014, 0x00000014, 0x01C00014, 0x00000003, 0x00000000,
	0x00000300
}, rtl8188ee_bb_agc_vals0[] = {
	0xFB000001, 0xFB010001, 0xFB020001, 0xFB030001, 0xFB040001,
	0xFB050001, 0xFA060001, 0xF9070001, 0xF8080001, 0xF7090001,
	0xF60A0001, 0xF50B0001, 0xF40C0001, 0xF30D0001, 0xF20E0001,
	0xF10F0001, 0xF0100001, 0xEF110001, 0xEE120001, 0xED130001,
	0xEC140001, 0xEB150001, 0xEA160001, 0xE9170001, 0xE8180001,
	0xE7190001, 0xE61A0001, 0xE51B0001, 0xE41C0001, 0xE31D0001,
	0xE21E0001, 0xE11F0001, 0x8A200001, 0x89210001, 0x88220001,
	0x87230001, 0x86240001, 0x85250001, 0x84260001, 0x83270001,
	0x82280001, 0x6B290001, 0x6A2A0001, 0x692B0001, 0x682C0001,
	0x672D0001, 0x662E0001, 0x652F0001, 0x64300001, 0x63310001,
	0x62320001, 0x61330001, 0x46340001, 0x45350001, 0x44360001,
	0x43370001, 0x42380001, 0x41390001, 0x403A0001, 0x403B0001,
	0x403C0001, 0x403D0001, 0x403E0001, 0x403F0001, 0xFB400001,
	0xFB410001, 0xFB420001, 0xFB430001, 0xFB440001, 0xFB450001,
	0xFB460001, 0xFB470001, 0xFB480001, 0xFA490001, 0xF94A0001,
	0xF84B0001, 0xF74C0001, 0xF64D0001, 0xF54E0001, 0xF44F0001,
	0xF3500001, 0xF2510001, 0xF1520001, 0xF0530001, 0xEF540001,
	0xEE550001, 0xED560001, 0xEC570001, 0xEB580001, 0xEA590001,
	0xE95A0001, 0xE85B0001, 0xE75C0001, 0xE65D0001, 0xE55E0001,
	0xE45F0001, 0xE3600001, 0xE2610001, 0xC3620001, 0xC2630001,
	0xC1640001, 0x8B650001, 0x8A660001, 0x89670001, 0x88680001,
	0x87690001, 0x866A0001, 0x856B0001, 0x846C0001, 0x676D0001,
	0x666E0001, 0x656F0001, 0x64700001, 0x63710001, 0x62720001,
	0x61730001, 0x60740001, 0x46750001, 0x45760001, 0x44770001,
	0x43780001, 0x42790001, 0x417A0001, 0x407B0001, 0x407C0001,
	0x407D0001, 0x407E0001, 0x407F0001
};

static const struct rtwn_bb_prog rtl8188ee_bb[] = {
	{
		nitems(rtl8188ee_bb_phy_regs0),
		rtl8188ee_bb_phy_regs0,
		rtl8188ee_bb_phy_vals0,
		{ (0x01 | 0x02) }, // I do not fully know what this means
		NULL
	}
};

static const struct rtwn_agc_prog rtl8188ee_agc[] = {
	{
		nitems(rtl8188ee_bb_agc_vals0),
		rtl8188ee_bb_agc_vals0,
		{ 0 },
		NULL
	}
	//{ 0, NULL, NULL, { 0 }, NULL }
};

#endif	/* R88EE_PRIV_H */
